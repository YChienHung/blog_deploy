<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文章标注测试</title>
      <link href="/posts/a7287e5.html"/>
      <url>/posts/a7287e5.html</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h3 id="fdfg"><a href="#fdfg" class="headerlink" title="fdfg"></a>fdfg</h3><h3 id="fvdgdd"><a href="#fvdgdd" class="headerlink" title="fvdgdd"></a>fvdgdd</h3><h4 id="fsdgdfgdf"><a href="#fsdgdfgdf" class="headerlink" title="fsdgdfgdf"></a>fsdgdfgdf</h4><h5 id="fsdgdfgdfgefgheg"><a href="#fsdgdfgdfgefgheg" class="headerlink" title="fsdgdfgdfgefgheg"></a>fsdgdfgdfgefgheg</h5><h3 id="ghnrhe"><a href="#ghnrhe" class="headerlink" title="ghnrhe"></a>ghnrhe</h3><h2 id="Abstrt"><a href="#Abstrt" class="headerlink" title="Abstrt"></a>Abstrt</h2><h3 id="fgfdgaedfg"><a href="#fgfdgaedfg" class="headerlink" title="fgfdgaedfg"></a>fgfdgaedfg</h3><h2 id="AAA"><a href="#AAA" class="headerlink" title="AAA"></a>AAA</h2><h3 id="vfcdgvds"><a href="#vfcdgvds" class="headerlink" title="vfcdgvds"></a>vfcdgvds</h3><p><img src="/posts/a7287e5/1.jpg" alt="1.1"><br><img src="/posts/a7287e5/2.jpg" alt="1.2"><br><img src="/posts/a7287e5/3.jpg" alt="1.3"></p><h3 id="gdfg"><a href="#gdfg" class="headerlink" title="gdfg"></a>gdfg</h3><p><img src="/posts/a7287e5/4.jpg" alt="1.4"></p><h2 id="BBB"><a href="#BBB" class="headerlink" title="BBB"></a>BBB</h2><p><img src="/posts/a7287e5/5.jpg" alt="2.1"></p><h2 id="CCCCFGHEF"><a href="#CCCCFGHEF" class="headerlink" title="CCCCFGHEF"></a>CCCCFGHEF</h2><p><img src="/posts/a7287e5/6.jpg" alt="3.1"><br><img src="/posts/a7287e5/7.jpg" alt="3.2"></p><h3 id="gdfgff"><a href="#gdfgff" class="headerlink" title="gdfgff"></a>gdfgff</h3><p><img src="/posts/a7287e5/8.jpg" alt="3.3"></p><h3 id="gdfgfd"><a href="#gdfgfd" class="headerlink" title="gdfgfd"></a>gdfgfd</h3><h3 id="gdfgffdfdfdfdfdf"><a href="#gdfgffdfdfdfdfdf" class="headerlink" title="gdfgffdfdfdfdfdf"></a>gdfgffdfdfdfdfdf</h3><h2 id="9959129621fgregd"><a href="#9959129621fgregd" class="headerlink" title="9959129621fgregd"></a>9959129621fgregd</h2><p><img src="/posts/a7287e5/9.jpg" alt="4.1"><br><img src="/posts/a7287e5/10.jpg" alt="4.2"><br><img src="/posts/a7287e5/11.jpg" alt="4.3"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pixhawk 2.4.8 食用手册</title>
      <link href="/posts/8fa6be2e.html"/>
      <url>/posts/8fa6be2e.html</url>
      
        <content type="html"><![CDATA[<p>参考文献：<br><a href="https://blog.csdn.net/Sangfno1/article/details/125682488">https://blog.csdn.net/Sangfno1/article/details/125682488</a><br><a href="https://blog.csdn.net/bingzhua/article/details/127213080">https://blog.csdn.net/bingzhua/article/details/127213080</a></p><p><a href="http://pix.1yuav.com/shua-4-0-3-gu-jian-hou-ru-he-shua-px4-gu-jian.html">http://pix.1yuav.com/shua-4-0-3-gu-jian-hou-ru-he-shua-px4-gu-jian.html</a></p><p><a href="https://www.bilibili.com/video/BV1nt4y1U7UY/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;vd_source=5cde26b07e28d0eb94e88975bc3199bc">https://www.bilibili.com/video/BV1nt4y1U7UY/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;vd_source=5cde26b07e28d0eb94e88975bc3199bc</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Qt安装qwt指南</title>
      <link href="/posts/66eed666.html"/>
      <url>/posts/66eed666.html</url>
      
        <content type="html"><![CDATA[<p>参考文献：<a href="https://blog.csdn.net/only_1/article/details/121145293">https://blog.csdn.net/only_1/article/details/121145293</a><br>        <a href="https://www.cnblogs.com/wecfly/p/15577910.html">https://www.cnblogs.com/wecfly/p/15577910.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客搭建指北</title>
      <link href="/posts/1231feec.html"/>
      <url>/posts/1231feec.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装博客环境"><a href="#安装博客环境" class="headerlink" title="安装博客环境"></a>安装博客环境</h2><h3 id="更换镜像源"><a href="#更换镜像源" class="headerlink" title="更换镜像源"></a>更换镜像源</h3><p>由于国内访问国外网站存在网络不畅的问题，故更换taobao镜像源。执行命令如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p><p>切换回镜像源则执行如下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>全局安装hexo框架<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>初始化hexo博客目录,这里的博客目录名称为blog。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> blog</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>进入blog目录，可以看到如下文件结构。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></p><h3 id="安装butterfly主题"><a href="#安装butterfly主题" class="headerlink" title="安装butterfly主题"></a>安装butterfly主题</h3><p>在blog目录，执行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure></p><p>升級方法：在主題目錄下，運行 <code>git pull</code></p><p>修改 Hexo 根目录(即所述blog目录)下的 _config.yml，把主题改butterfly</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>这里，还需要安装两个渲染插件，如果你已经安装请略过。</p><p>如果你沒有 pug 以及 stylus 的渲染器，請下載安裝：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>在 hexo 的根目录创建一个名为 _config.butterfly.yml 的文件，其内容复制 butterfly 目录下的 _config.yml 文件，之后修改主题配置在此文件下进行，方便主题更新。</p><h3 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h3><p>安装插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br>修改 _config.yml 文件，找到 deploy 关键字，修改示例如下(这里默认你已经配置好了github上的仓库)：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/YChienHung/YChienHung.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="博客系统备份"><a href="#博客系统备份" class="headerlink" title="博客系统备份"></a>博客系统备份</h3><p>这个等有时间再写，主要是一些git操作</p><h3 id="配置文章链接转数字或字母"><a href="#配置文章链接转数字或字母" class="headerlink" title="配置文章链接转数字或字母"></a>配置文章链接转数字或字母</h3><p>安装插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></p><p>配置文件：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span> <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span> <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure></p><h3 id="本地搜索功能"><a href="#本地搜索功能" class="headerlink" title="本地搜索功能"></a>本地搜索功能</h3><p>安装插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></p><p>配置文件：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># local Search</span></span><br><span class="line"><span class="comment"># Docs: https://github.com/wzpan/hexo-generator-search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p><h3 id="Hexo-本地图片插件"><a href="#Hexo-本地图片插件" class="headerlink" title="Hexo 本地图片插件"></a>Hexo 本地图片插件</h3><div class="tip error"><p>安装之后会导致js错误</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><h3 id="修复todolist"><a href="#修复todolist" class="headerlink" title="修复todolist"></a>修复todolist</h3><p>有两种方案可以使用，第一种为从底层入手，修改hexo-renderer-kramed渲染插件的代码实现，另一种方式是安装外挂标签。</p><p>plan A:<br>将如下代码加入<code>/node_modules/hexo-renderer-kramed/lib/renderer.js</code>文件的第19行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Support To-Do List</span></span><br><span class="line"><span class="title class_">Renderer</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">listitem</span> = <span class="keyword">function</span>(<span class="params">text</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/^\s*\[[x ]\]\s*/</span>.<span class="title function_">test</span>(text)) &#123;</span><br><span class="line">    text = text.<span class="title function_">replace</span>(<span class="regexp">/^\s*\[ \]\s*/</span>, <span class="string">&#x27;&lt;input type=&quot;checkbox&quot;&gt;&lt;/input&gt; &#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/^\s*\[x\]\s*/</span>, <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; checked&gt;&lt;/input&gt; &#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/li&gt;\n&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;li&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/li&gt;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked></input> 已经完成</li><li style="list-style: none"><input type="checkbox"></input> 未完成的</li></ul><p>plan B:</p><p>安装插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure><br><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><br><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><br><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><br><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><br><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><br><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><br><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><br><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><br><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div></p><h3 id="友链卡片美化"><a href="#友链卡片美化" class="headerlink" title="友链卡片美化"></a>友链卡片美化</h3><p><a href="https://akilar.top/posts/57291286/">https://akilar.top/posts/57291286/</a></p><h3 id="自动给图片添加序号"><a href="#自动给图片添加序号" class="headerlink" title="自动给图片添加序号"></a>自动给图片添加序号</h3><p>修改<code>_config.butterfly.yml</code>文件，使能图片描述<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-   photofigcaption: false</span></span><br><span class="line"><span class="addition">+   photofigcaption: true</span></span><br></pre></td></tr></table></figure></p><p>修改<code>butterfly\source\css\_global\index.styl</code>文件, 增大下标字体<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.is-center</span><br><span class="line">  text-align: center</span><br><span class="line"><span class="addition">+ font-size: 20px;</span></span><br></pre></td></tr></table></figure></p><p>修改<code>butterfly\source\js\main.js</code></p><p>V2 修复序号编写错误<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  function addPhotoFigcaption () &#123;</span><br><span class="line">    // 为每一章编序号，方面后面查找</span><br><span class="line"><span class="addition">+   var chapter_name_arr = [&quot;&quot;]</span></span><br><span class="line"><span class="addition">+   var chapter_img_index_arr = [0]</span></span><br><span class="line"><span class="addition">+   var chapter_arr = document.getElementsByTagName(&quot;H2&quot;)</span></span><br><span class="line"><span class="addition">+   for (let i = 0; i &lt; chapter_arr.length; i++) &#123;</span></span><br><span class="line"><span class="addition">+     chapter_name_arr.push(chapter_arr[i].id)</span></span><br><span class="line"><span class="addition">+     chapter_img_index_arr.push(1)</span></span><br><span class="line"><span class="addition">+   &#125;</span></span><br><span class="line">    // 添加图片下标</span><br><span class="line">    document.querySelectorAll(&#x27;#article-container img&#x27;).forEach(function (item) &#123;</span><br><span class="line">      const parentEle = item.parentNode</span><br><span class="line"><span class="addition">+     var tempEle = item.parentNode</span></span><br><span class="line"><span class="addition">+     do &#123;</span></span><br><span class="line"><span class="addition">+       tempEle = tempEle.previousElementSibling</span></span><br><span class="line"><span class="addition">+     &#125;</span></span><br><span class="line"><span class="addition">+     while (tempEle.nodeName != &#x27;H2&#x27;);</span></span><br><span class="line"><span class="addition">+     var chapter_index = chapter_name_arr.indexOf(tempEle.id);     </span></span><br><span class="line">      const altValue = item.title || item.alt</span><br><span class="line">      if (altValue &amp;&amp; !parentEle.parentNode.classList.contains(&#x27;justified-gallery&#x27;)) &#123;</span><br><span class="line">        const ele = document.createElement(&#x27;div&#x27;)</span><br><span class="line">        ele.className = &#x27;img-alt is-center&#x27;</span><br><span class="line"><span class="deletion">-       ele.textContent = altValue;</span></span><br><span class="line"><span class="addition">+       ele.textContent = &quot;图&quot; + chapter_index + &quot;.&quot; + (chapter_img_index_arr[chapter_index]++) + &quot; &quot; + altValue</span></span><br><span class="line">        parentEle.insertBefore(ele, item.nextSibling)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>V1<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function addPhotoFigcaption () &#123;</span><br><span class="line"><span class="addition">+   var chapter_arr = [&quot;&quot;]    // 章节名称</span></span><br><span class="line"><span class="addition">+   var chapter_index = 0     // 章节序号</span></span><br><span class="line"><span class="addition">+   var chapter_img_index = 1 // 每一章图片序号</span></span><br><span class="line">    document.querySelectorAll(&#x27;#article-container img&#x27;).forEach(function (item) &#123;</span><br><span class="line">      const parentEle = item.parentNode</span><br><span class="line"><span class="addition">+     tempEle = item.parentNode</span></span><br><span class="line"><span class="addition">+     do &#123;</span></span><br><span class="line"><span class="addition">+       tempEle = tempEle.previousElementSibling</span></span><br><span class="line"><span class="addition">+     &#125;</span></span><br><span class="line"><span class="addition">+     while (tempEle.nodeName != &#x27;H2&#x27;);</span></span><br><span class="line"><span class="addition">+     if (chapter_arr[chapter_index] != tempEle.id)</span></span><br><span class="line"><span class="addition">+     &#123;</span></span><br><span class="line"><span class="addition">+       chapter_arr.push(tempEle.id)</span></span><br><span class="line"><span class="addition">+       chapter_index += 1</span></span><br><span class="line"><span class="addition">+       chapter_img_index = 1</span></span><br><span class="line"><span class="addition">+     &#125;</span></span><br><span class="line">      const altValue = item.title || item.alt</span><br><span class="line">      if (altValue &amp;&amp; !parentEle.parentNode.classList.contains(&#x27;justified-gallery&#x27;)) &#123;</span><br><span class="line">        const ele = document.createElement(&#x27;div&#x27;)</span><br><span class="line">        ele.className = &#x27;img-alt is-center&#x27;</span><br><span class="line"><span class="deletion">-       ele.textContent = altValue;</span></span><br><span class="line"><span class="addition">+       ele.textContent = &quot;图&quot; + chapter_index + &quot;.&quot; + (chapter_img_index++) + &quot; &quot; + altValue</span></span><br><span class="line">        parentEle.insertBefore(ele, item.nextSibling)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><h3 id="胶囊进度条"><a href="#胶囊进度条" class="headerlink" title="胶囊进度条"></a>胶囊进度条</h3><p>新建<code>/css/progress_bar.css</code>文件，内容如下<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.pace</span></span><br><span class="line">&#123;</span><br><span class="line">    -webkit-<span class="attribute">pointer-events</span>: none;</span><br><span class="line">    <span class="attribute">pointer-events</span>: none;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">4rem</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#eaecf2</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#e3e8f7</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace-inactive</span> <span class="selector-class">.pace-progress</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span></span><br><span class="line">&#123;</span><br><span class="line">    -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    -moz-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    -ms-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    -o-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    -moz-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    -ms-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    -o-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, <span class="number">#ee7752</span>, <span class="number">#e73c7e</span>, <span class="number">#23a6d5</span>, <span class="number">#23d5ab</span>);</span><br><span class="line">    <span class="attribute">animation</span>: gradient <span class="number">1.5s</span> ease infinite;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">200%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span><span class="selector-class">.pace-inactive</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> gradient</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0%</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">50%</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">100%</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在<code>_config.butterfly.yml</code>添加如下内容</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line"><span class="addition">+   - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/progress_bar.css?1&quot;&gt;</span></span><br><span class="line">  bottom:</span><br><span class="line"><span class="addition">+   - &lt;script data-pjax src=&quot;//npm.elemecdn.com/pace-js@1.2.4/pace.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript-实现-Hexo-中给时间久远的文章增加友好的提示（Pug）"><a href="#JavaScript-实现-Hexo-中给时间久远的文章增加友好的提示（Pug）" class="headerlink" title="JavaScript 实现 Hexo 中给时间久远的文章增加友好的提示（Pug）"></a>JavaScript 实现 Hexo 中给时间久远的文章增加友好的提示（Pug）</h3><p>新建文件<code>themes/Butterfly/layout/includes/post/timecount.pug</code>文件，内容如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">script.</span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    now = now.<span class="title function_">getTime</span>() <span class="comment">// 当前时间戳</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> postinfo = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;post-meta-date-updated&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">var</span> post_updated_date = <span class="keyword">new</span> <span class="title class_">Date</span>(postinfo.<span class="property">title</span>.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>].<span class="title function_">replace</span>(<span class="regexp">/-/</span>,<span class="string">&quot;/&quot;</span>))</span><br><span class="line">    post_updated_date = post_updated_date.<span class="title function_">getTime</span>() <span class="comment">// 文章发布时间戳</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> post_interval = <span class="built_in">parseInt</span>(now - post_updated_date)</span><br><span class="line">    <span class="comment">// 超过31天提示：3600*24*31*1000</span></span><br><span class="line">    <span class="keyword">if</span>(post_interval &gt; <span class="number">2678400000</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> timecount = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;post-timecount&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">var</span> out = <span class="built_in">parseInt</span>(post_interval / <span class="number">86400000</span>)</span><br><span class="line">        timecount.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;div class=\&quot;tip warning\&quot;&gt;&lt;p&gt;这是一篇更新于 &quot;</span>+out+<span class="string">&quot; 天前的文章，其中的信息可能已经有所发展或是发生改变。&lt;/p&gt;&lt;/div&gt;&quot;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改 <code>themes/Butterfly/layout/post.pug</code> 文件。<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    if top_img <span class="comment">=== false</span></span><br><span class="line">      include includes/header/post-info.pug</span><br><span class="line"></span><br><span class="line"><span class="addition">+   .post-timecount</span></span><br><span class="line"><span class="addition">+   include includes/post/timecount.pug</span></span><br><span class="line"></span><br><span class="line">    article#article-container.post-content!=page.content</span><br><span class="line">    include includes/post/post-copyright.pug</span><br></pre></td></tr></table></figure></p><h3 id="给章节标题编号"><a href="#给章节标题编号" class="headerlink" title="给章节标题编号"></a>给章节标题编号</h3><p>修改<code>_config.butterfly.yml</code>文件<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ # 标题排序</span></span><br><span class="line"><span class="addition">+ titleindex: true</span></span><br></pre></td></tr></table></figure></p><p>修改<code>butterfly\layout\includes\head\config.pug</code>文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    isPhotoFigcaption: !&#123;theme.photofigcaption&#125;,</span><br><span class="line"><span class="addition">+   isTitleIndex: !&#123;theme.titleindex&#125;,</span></span><br><span class="line">    islazyload: !&#123;theme.lazyload.enable&#125;,</span><br><span class="line">    isAnchor: !&#123;theme.anchor.auto_update&#125;</span><br></pre></td></tr></table></figure><h2 id="解决hexo-renderer-kramed渲染冲突的部分问题"><a href="#解决hexo-renderer-kramed渲染冲突的部分问题" class="headerlink" title="解决hexo-renderer-kramed渲染冲突的部分问题"></a>解决hexo-renderer-kramed渲染冲突的部分问题</h2><p><a href="https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/">https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/</a></p><h2 id="Hexo-博客文章统计图"><a href="#Hexo-博客文章统计图" class="headerlink" title="Hexo 博客文章统计图"></a>Hexo 博客文章统计图</h2><p><a href="https://blog.eurkon.com/post/1213ef82.html">https://blog.eurkon.com/post/1213ef82.html</a></p><h2 id="Hexo博客导航栏美化"><a href="#Hexo博客导航栏美化" class="headerlink" title="Hexo博客导航栏美化"></a>Hexo博客导航栏美化</h2><p><a href="https://blog.leonus.cn/2022/hexoCenter.html">https://blog.leonus.cn/2022/hexoCenter.html</a></p><h2 id="Hexo博客标签的魔改"><a href="#Hexo博客标签的魔改" class="headerlink" title="Hexo博客标签的魔改"></a>Hexo博客标签的魔改</h2><p><a href="https://blog.leonus.cn/2022/tags.html">https://blog.leonus.cn/2022/tags.html</a><br>a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup></p><h2 id="添加音乐页面"><a href="#添加音乐页面" class="headerlink" title="添加音乐页面"></a>添加音乐页面</h2><p><a href="https://www.chuckle.top/article/3322c8a8.html">https://www.chuckle.top/article/3322c8a8.html</a></p><h2 id="修改404页面"><a href="#修改404页面" class="headerlink" title="修改404页面"></a>修改404页面</h2><div class="tip error"><p>貌似样式存在些问题，修改失败，改日再战</p></div><p><a href="https://blog.zhheo.com/p/f48e518b.html">https://blog.zhheo.com/p/f48e518b.html</a></p><h2 id="Heo同款loading动画"><a href="#Heo同款loading动画" class="headerlink" title="Heo同款loading动画"></a>Heo同款loading动画</h2><p><a href="https://anzhiy.cn/posts/52d8.html">https://anzhiy.cn/posts/52d8.html</a></p><h2 id="网站改完代码不刷新"><a href="#网站改完代码不刷新" class="headerlink" title="网站改完代码不刷新"></a>网站改完代码不刷新</h2><p>我发现的原因是cookie没有删除，导致页面不刷新，解决方案如下：</p><p>点击edge地址栏左侧的感叹号，会出现网站信息页面，将cookie删除即可。</p><h2 id="暂时无法解决的错误"><a href="#暂时无法解决的错误" class="headerlink" title="暂时无法解决的错误"></a>暂时无法解决的错误</h2><h3 id="hexo-asset-image-导致js无法正常运行"><a href="#hexo-asset-image-导致js无法正常运行" class="headerlink" title="hexo-asset-image 导致js无法正常运行"></a>hexo-asset-image 导致js无法正常运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">update link as:--&gt;/posts/6b7d0a1b.htm/ChineseError.png</span><br><span class="line">update link as:--&gt;/posts/6b7d0a1b.htm/ChineseError.png</span><br><span class="line">no src attr, skipped...</span><br><span class="line">&lt;ref *2&gt; initialize &#123;</span><br><span class="line">  &#x27;0&#x27;: &lt;ref *1&gt; &#123;</span><br><span class="line">    type: &#x27;tag&#x27;,</span><br><span class="line">    name: &#x27;img&#x27;,</span><br><span class="line">    attribs: &#123; width: &#x27;100%&#x27;, src: &#x27;&#x27;, alt: &#x27;&#x27; &#125;,</span><br><span class="line">    children: [],</span><br><span class="line">    next: &#123;</span><br><span class="line">      data: &#x27;\n\t\t\t&#x27;,</span><br><span class="line">      type: &#x27;text&#x27;,</span><br><span class="line">      next: null,</span><br><span class="line">      prev: [Circular *1],</span><br><span class="line">      parent: [Object]</span><br><span class="line">    &#125;,</span><br><span class="line">    prev: &#123;</span><br><span class="line">      data: &#x27;\n\t\t\t\t&#x27;,</span><br><span class="line">      type: &#x27;text&#x27;,</span><br><span class="line">      next: [Circular *1],</span><br><span class="line">      prev: null,</span><br><span class="line">      parent: [Object]</span><br><span class="line">    &#125;,</span><br><span class="line">    parent: &#123;</span><br><span class="line">      type: &#x27;tag&#x27;,</span><br><span class="line">      name: &#x27;div&#x27;,</span><br><span class="line">      attribs: [Object],</span><br><span class="line">      children: [Array],</span><br><span class="line">      next: [Object],</span><br><span class="line">      prev: [Object],</span><br><span class="line">      parent: [Object]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  options: &#123;</span><br><span class="line">    ignoreWhitespace: false,</span><br><span class="line">    xmlMode: false,</span><br><span class="line">    lowerCaseTags: false,</span><br><span class="line">    decodeEntities: false,</span><br><span class="line">    withDomLvl1: true,</span><br><span class="line">    normalizeWhitespace: false</span><br><span class="line">  &#125;,</span><br><span class="line">  length: 1,</span><br><span class="line">  _root: [Circular *2]</span><br><span class="line">&#125;</span><br><span class="line">no src attr, skipped...</span><br><span class="line">&lt;ref *2&gt; initialize &#123;</span><br><span class="line">  &#x27;0&#x27;: &lt;ref *1&gt; &#123;</span><br><span class="line">    type: &#x27;tag&#x27;,</span><br><span class="line">    name: &#x27;img&#x27;,</span><br><span class="line">    attribs: &#123; width: &#x27;100%&#x27;, src: &#x27;&#x27;, alt: &#x27;&#x27; &#125;,</span><br><span class="line">    children: [],</span><br><span class="line">    next: &#123;</span><br><span class="line">      data: &#x27;\n\t\t\t&#x27;,</span><br><span class="line">      type: &#x27;text&#x27;,</span><br><span class="line">      next: null,</span><br><span class="line">      prev: [Circular *1],</span><br><span class="line">      parent: [Object]</span><br><span class="line">    &#125;,</span><br><span class="line">    prev: &#123;</span><br><span class="line">      data: &#x27;\n\t\t\t\t&#x27;,</span><br><span class="line">      type: &#x27;text&#x27;,</span><br><span class="line">      next: [Circular *1],</span><br><span class="line">      prev: null,</span><br><span class="line">      parent: [Object]</span><br><span class="line">    &#125;,</span><br><span class="line">    parent: &#123;</span><br><span class="line">      type: &#x27;tag&#x27;,</span><br><span class="line">      name: &#x27;div&#x27;,</span><br><span class="line">      attribs: [Object],</span><br><span class="line">      children: [Array],</span><br><span class="line">      next: [Object],</span><br><span class="line">      prev: [Object],</span><br><span class="line">      parent: [Object]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  options: &#123;</span><br><span class="line">    ignoreWhitespace: false,</span><br><span class="line">    xmlMode: false,</span><br><span class="line">    lowerCaseTags: false,</span><br><span class="line">    decodeEntities: false,</span><br><span class="line">    withDomLvl1: true,</span><br><span class="line">    normalizeWhitespace: false</span><br><span class="line">  &#125;,</span><br><span class="line">  length: 1,</span><br><span class="line">  _root: [Circular *2]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/sywdebug/article/details/113942047">https://blog.csdn.net/sywdebug/article/details/113942047</a><br><a href="https://blog.csdn.net/houwhu/article/details/123728372">https://blog.csdn.net/houwhu/article/details/123728372</a><br><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a><br><a href="https://zhuanlan.zhihu.com/p/520525673">https://zhuanlan.zhihu.com/p/520525673</a></p><p>markdown 渲染：<br><a href="https://blog.csdn.net/qq_36667170/article/details/105846999">https://blog.csdn.net/qq_36667170/article/details/105846999</a></p><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon-padding modern"><i class="note-icon fas fa-fan"></i><p><code>flip</code>动画效果。</p></div></div><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>战忽局警句</title>
      <link href="/posts/2d5c80db.html"/>
      <url>/posts/2d5c80db.html</url>
      
        <content type="html"><![CDATA[<p>1、热门是昨日的成就，主流是今日的局限，边缘是明日的机会。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Clion搭建stm32开发环境的坑</title>
      <link href="/posts/e9df9350.html"/>
      <url>/posts/e9df9350.html</url>
      
        <content type="html"><![CDATA[<p>这是我整理的一些坑，希望不要再遇到了……每一个坑都是一座难以翻越的大山<br><span id="more"></span></p><ol><li><h3 id="首当其冲"><a href="#首当其冲" class="headerlink" title="首当其冲"></a>首当其冲</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:/program files/stmicroelectronics/stm32cube/gnu-tools-arm-embedded/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld.exe: cannot open linker script file C:/Users/YChienHung/Desktop/stm32_test/: Invalid argument</span><br><span class="line">collect2.exe: error: ld returned 1 <span class="built_in">exit</span> status</span><br></pre></td></tr></table></figure></li></ol><p>这个错误应该该是CubeMX的一个bug，出现这种情况的原因就是java版本不匹配，cubeMX是基于java8编写的，而我还安装了java14 ，即使修改java_home 也没有解决，最终还是卸载了java14，哎，只能学一样……</p><ol><li><h3 id="正点原子工程-s文件报错"><a href="#正点原子工程-s文件报错" class="headerlink" title="正点原子工程 .s文件报错"></a>正点原子工程 .s文件报错</h3><p>这个其实是因为编译器不同而导致的  ，keil使用的貌似是ARMCC编译器，而Clion配置的是GCC编译器，他们底层的汇编指令完全不同，编译时，编译器无法解析汇编指令，就会报错。<br>解决方案：<br>1、在cubemx的仓库里拷贝一个对应的 .s文件。<br>2、当然也可以用cubemx生成一个工程，直接把.s文件拷贝到正点原子的工程下，记得把原来的文件删除</p></li><li><p>1</p></li><li><p>1</p></li><li><p>1</p></li><li><p>1</p></li><li><p>11</p></li></ol><p>1</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32之浅析BootLoader</title>
      <link href="/posts/e82bf63a.html"/>
      <url>/posts/e82bf63a.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gcc编译器下输入输出转串口</title>
      <link href="/posts/9cec8ee0.html"/>
      <url>/posts/9cec8ee0.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcc </tag>
            
            <tag> stm32 </tag>
            
            <tag> usart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PlatformIO 之 串口工具的使用</title>
      <link href="/posts/e9b8d0e.html"/>
      <url>/posts/e9b8d0e.html</url>
      
        <content type="html"><![CDATA[<p>先在<code>platformio.ini</code>下设置一下监听的串口以及波特率,当然这里也可以略过，后面还会讲到</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">monitor_speed</span> = <span class="number">9600</span></span><br><span class="line"><span class="attr">monitor_port</span> = COM3</span><br></pre></td></tr></table></figure><span id="more"></span><p>单击左下角的小插头，打开serial monitor</p><p>what ？？？？  乱码了</p><p>不慌 仔细一看，问题不大</p><p>按下快捷键 ctrl +T ctrl+H  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">--- pySerial (3.4) - miniterm - help</span><br><span class="line">---</span><br><span class="line">--- Ctrl+C   Exit program</span><br><span class="line">--- Ctrl+T   Menu escape key, followed by:</span><br><span class="line">--- Menu keys:</span><br><span class="line">---    Ctrl+T  Send the menu character itself to remote       </span><br><span class="line">---    Ctrl+C  Send the exit character itself to remote       </span><br><span class="line">---    Ctrl+I  Show info</span><br><span class="line">---    Ctrl+U  Upload file (prompt will be shown)</span><br><span class="line">---    Ctrl+A  encoding</span><br><span class="line">---    Ctrl+F  edit filters</span><br><span class="line">--- Toggles:</span><br><span class="line">---    Ctrl+R  RTS   Ctrl+D  DTR   Ctrl+B  BREAK</span><br><span class="line">---    Ctrl+E  echo  Ctrl+L  EOL</span><br><span class="line">---</span><br><span class="line">--- Port settings (Ctrl+T followed by the following):</span><br><span class="line">---    p          change port</span><br><span class="line">---    7 8        set data bits</span><br><span class="line">---    N E O S M  change parity (None, Even, Odd, Space, Mark)</span><br><span class="line">---    1 2 3      set stop bits (1, 2, 1.5)</span><br><span class="line">---    b          change baud rate</span><br><span class="line">---    x X        disable/enable software flow control        </span><br><span class="line">---    r R        disable/enable hardware flow control   </span><br></pre></td></tr></table></figure><p>ctrl + T Ctrl+A 进入编辑</p><p>—- Enter new encoding name [UTF-8]:</p><p>输入 “gbk” 回车</p><p>已经可以正常显示了</p><p>但是还有个问题 不能每次都进行这样的操作吧</p><p>于是乎 这里遇到了一些挫折 省去10000字</p><p>在<code>platformio.h</code>下加入<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">monitor_flags</span>=</span><br><span class="line">    --encoding</span><br><span class="line">    gbk</span><br></pre></td></tr></table></figure><br>就行了至此串口工具就这么调试好了</p><p>TODO：<br>由于输入输出都是在终端进行的，界面并不那么友好，要像个法子解决一下</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> platformio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp 中一些类型的转换方法</title>
      <link href="/posts/38e6e1ff.html"/>
      <url>/posts/38e6e1ff.html</url>
      
        <content type="html"><![CDATA[<p>1、string 转 CString</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CString.format(<span class="string">&quot;%s&quot;</span>, <span class="built_in">string</span>.c_str());</span><br></pre></td></tr></table></figure><span id="more"></span><p>2、char <em> 转CString<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CString.format(<span class="string">&quot;%s&quot;</span>, <span class="type">char</span>*);</span><br></pre></td></tr></table></figure><br>3、char </em> 转 string<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> <span class="title function_">s</span><span class="params">(<span class="type">char</span> *)</span>;</span><br></pre></td></tr></table></figure><br>4、string 转 char <em><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *p = <span class="built_in">string</span>.c_str();</span><br></pre></td></tr></table></figure><br>5、CString 转 string<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> <span class="title function_">s</span><span class="params">(CString.GetBuffer(CString.GetLength()))</span>;</span><br></pre></td></tr></table></figure><br>6、CString 转 char </em><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charpoint=strtest.GetBuffer(strtest.GetLength());</span><br></pre></td></tr></table></figure><br>不建议用[LPCTSTR]进行强制类型转化，这样strtest大小发生变化时会出现错误。</p><p>7、CString 转 char[100]<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line">CString <span class="title function_">str</span><span class="params">(<span class="string">&quot;aaaaaa&quot;</span>)</span>;</span><br><span class="line"><span class="built_in">strncpy</span>(a,(LPCTSTR)str,<span class="keyword">sizeof</span>(a));</span><br></pre></td></tr></table></figure></p><p>8、int转换为CString</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CString str;</span><br><span class="line"><span class="type">int</span> number=<span class="number">15</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;15&quot;</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%d&quot;</span>),number);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;  15&quot;(前面有两个空格；4表示将占用4位，如果数字超过4位将输出所有数字，不会截断)</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%4d&quot;</span>),number);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;0015&quot;(.4表示将占用4位，如果数字超过4位将输出所有数字，不会截断)</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%.4d&quot;</span>),number);</span><br><span class="line"> <span class="type">long</span>转换为CString的方法与上面相似，只需要把%d改为%ld就可以了。</span><br></pre></td></tr></table></figure><p>9、double转换为CString</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CString str;</span><br><span class="line"><span class="type">double</span> num=<span class="number">1.46</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;1.46&quot;</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%lf&quot;</span>),num);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;1.5&quot;(.1表示小数点后留1位，小数点后超过1位则四舍五入)</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%.1lf&quot;</span>),num);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;1.4600&quot;</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%.4f&quot;</span>),num);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot; 1.4600&quot;(前面有1个空格)</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%7.4f&quot;</span>),num);</span><br><span class="line"><span class="type">float</span>转换为CString的方法也同上面相似，将lf%改为f%就可以了。</span><br></pre></td></tr></table></figure><p>10、将十进制数转换为八进制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CString str;</span><br><span class="line"><span class="type">int</span> num=<span class="number">255</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;377&quot;</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%o&quot;</span>),num);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//str=&quot;00000377&quot;</span></span><br><span class="line">str.Format(_T(<span class="string">&quot;%.8o&quot;</span>),num);</span><br></pre></td></tr></table></figure><p>11、CString转化为int</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CString str = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="type">int</span> number = atoi(str);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//error C2664: “atoi”: 不能将参数 1 从“CString”转换为“const char *” </span></span><br><span class="line"><span class="comment">//解决：用_ttoi代替atoi 或 _wtoi(str);</span></span><br><span class="line"><span class="comment">//转为64位int类型的话可以使用_ttoi64()</span></span><br></pre></td></tr></table></figure><p>12、CString转化为double<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CString str = <span class="string">&quot;123.00&quot;</span>;</span><br><span class="line"><span class="type">double</span> number = atof(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//error C2664: “atof”: 不能将参数 1 从“CString”转换为“const char *” </span></span><br><span class="line"><span class="comment">//解决：用_ttof代替atof 或 _wtof(str);</span></span><br><span class="line"><span class="comment">//转为64位double类型的话可以使用_ttof64()</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>用 Python 画出一个红心</title>
      <link href="/posts/cbafdc19.html"/>
      <url>/posts/cbafdc19.html</url>
      
        <content type="html"><![CDATA[<p>直接放上代码</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">curvemove</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">        right(<span class="number">1</span>)</span><br><span class="line">        forward(<span class="number">1</span>)</span><br><span class="line">setup(<span class="number">600</span>,<span class="number">600</span>,<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line">hideturtle()</span><br><span class="line">pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">fillcolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">pensize(<span class="number">2</span>)</span><br><span class="line">begin_fill()</span><br><span class="line">left(<span class="number">140</span>)</span><br><span class="line">forward(<span class="number">111.65</span>)</span><br><span class="line">curvemove()</span><br><span class="line">left(<span class="number">120</span>)</span><br><span class="line">curvemove()</span><br><span class="line">forward(<span class="number">111.65</span>)</span><br><span class="line">end_fill()</span><br><span class="line">penup()</span><br><span class="line">goto(-<span class="number">27</span>, <span class="number">85</span>)</span><br><span class="line">pendown()</span><br><span class="line">done()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单片机之IIC协议</title>
      <link href="/posts/52123a5.html"/>
      <url>/posts/52123a5.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单片机之串行口通信</title>
      <link href="/posts/b0d1ebb.html"/>
      <url>/posts/b0d1ebb.html</url>
      
        <content type="html"><![CDATA[<ol><li><h2 id="基本通信方式"><a href="#基本通信方式" class="headerlink" title="基本通信方式"></a>基本通信方式</h2><span id="more"></span><ul><li><h3 id="并行通信"><a href="#并行通信" class="headerlink" title="并行通信"></a>并行通信</h3></li><li><h3 id="串行通信"><a href="#串行通信" class="headerlink" title="串行通信"></a>串行通信</h3><ol><li><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>  串口通信是将数据字节分成一位一位的形式在一条传输线上逐个地传送，此时只需要一条数据线，外加一条公共信号地线和若干控制信号线，因为一次只能传送一位，所以对于一个字节的数据，至少要分八位才能传输完毕。</p></li><li><h4 id="必要过程"><a href="#必要过程" class="headerlink" title="必要过程"></a>必要过程</h4><p>  发送时，将并行数据转换为串行数据发送过去；接收时，将串行数据转换为并行数据</p></li></ol></li></ul></li><li><h2 id="串行通信-1"><a href="#串行通信-1" class="headerlink" title="串行通信"></a>串行通信</h2><ul><li><h3 id="串行通信的方式"><a href="#串行通信的方式" class="headerlink" title="串行通信的方式"></a>串行通信的方式</h3><ol><li><h4 id="异步串口通信"><a href="#异步串口通信" class="headerlink" title="异步串口通信"></a>异步串口通信</h4><h5 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h5><p>异步通信是指通信的发送与接收设备使用各自的时钟控制数据的发送和接收过程。</p></li></ol></li></ul></li></ol><pre><code>    异步通信是以字符（构成的帧）为单位进行传输，字符与字符之间的间隔（时间间隔）是任意的，但是每个字符的各个位是以固定的时间传送的，即字符之间不一定有&quot;位间隔&quot;的整数倍关系，但是同一字符内的各位之间的距离均为“位间隔”的整数倍。    ##### 字符帧    由起始位 数据位 奇偶校验位 停止位四部分组成    ##### 应用领域    在单片机与单片机之间，单片机与计算机之间通信时，通常采用异步串行通信方式 2. #### 同步串口通信</code></pre><ul><li><h3 id="串行通信的方式-1"><a href="#串行通信的方式-1" class="headerlink" title="串行通信的方式"></a>串行通信的方式</h3><ol><li><h4 id="单工-指数据传输只能沿一个方向，不能实现反向传输"><a href="#单工-指数据传输只能沿一个方向，不能实现反向传输" class="headerlink" title="单工               指数据传输只能沿一个方向，不能实现反向传输"></a>单工               指数据传输只能沿一个方向，不能实现反向传输</h4></li><li><h4 id="半双工-指数据传输可以沿两个方向，但需要分时进行"><a href="#半双工-指数据传输可以沿两个方向，但需要分时进行" class="headerlink" title="半双工         指数据传输可以沿两个方向，但需要分时进行"></a>半双工         指数据传输可以沿两个方向，但需要分时进行</h4></li><li><h4 id="全双工-指数据可以同时进行双向传输"><a href="#全双工-指数据可以同时进行双向传输" class="headerlink" title="全双工        指数据可以同时进行双向传输"></a>全双工        指数据可以同时进行双向传输</h4></li></ol></li><li><h3 id="串行通信的错误校验"><a href="#串行通信的错误校验" class="headerlink" title="串行通信的错误校验"></a>串行通信的错误校验</h3><ol><li>奇偶校验</li><li>代码和校验</li><li>循环冗余校验</li></ol></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单片机之中断</title>
      <link href="/posts/3c079718.html"/>
      <url>/posts/3c079718.html</url>
      
        <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ol><li><h3 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h3></li></ol><p>​        在CPU处理某一事件A时，发生了另一事件B，请求CPU迅速去处理（中断发生）；CPU暂时停止当前的工作（中断响应），转去处理事件B（中断服务）；待CPU处理事件B完毕后，再回到原来事件A被中断的地方继续处理事件A（中断返回），这过程称为中断。<span id="more"></span></p><ol><li><h3 id="中断嵌套"><a href="#中断嵌套" class="headerlink" title="中断嵌套"></a>中断嵌套</h3></li></ol><p>如果单片机正在处理一个中断程序，此时，又有一个中断现象发生，单片机将会停止当前中断程序，而转去执行新的中断程序，，新中断程序处理完毕后再回到刚才停止的中断程序处执行，执行完这个中断后而返回主程序继续执行主程序。</p><h2 id="中断源"><a href="#中断源" class="headerlink" title="中断源"></a>中断源</h2><ol><li><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3></li></ol><div class="table-container"><table><thead><tr><th>中断源</th><th>详情</th><th>触发条件</th></tr></thead><tbody><tr><td>INT0</td><td>外部中断0</td><td>由P3.2(52单片机)引入，低电平或下降沿引起</td></tr><tr><td>INT1</td><td>外部中断1</td><td>由P3.3(52单片机)引入，低电平或下降沿引起</td></tr><tr><td>T0</td><td>定时器/计数器0中断</td><td>由T0计数器计满回零引起</td></tr><tr><td>T1</td><td>定时器/计数器1中断</td><td>由T1计数器计满回零引起</td></tr><tr><td>T2</td><td>定时器/计数器2中断</td><td>由T2计数器计满回零引起</td></tr><tr><td>T1/R1</td><td>串行口中断</td><td>串行端口完成一帧字节发送/接收后引起</td></tr></tbody></table></div><ol><li><h3 id="中断级别"><a href="#中断级别" class="headerlink" title="中断级别"></a>中断级别</h3></li></ol><div class="table-container"><table><thead><tr><th>中断源</th><th>默认中断级别</th><th>序号</th></tr></thead><tbody><tr><td>INT0</td><td>最高</td><td>0</td></tr><tr><td>T0</td><td>第2</td><td>1</td></tr><tr><td>INT1</td><td>第3</td><td>2</td></tr><tr><td>T1</td><td>第4</td><td>3</td></tr><tr><td>T1/R1</td><td>第5</td><td>4</td></tr><tr><td>T2</td><td>最低</td><td>5</td></tr></tbody></table></div><h2 id="中断相关寄存器"><a href="#中断相关寄存器" class="headerlink" title="中断相关寄存器"></a>中断相关寄存器</h2><ol><li><h3 id="中断允许寄存器"><a href="#中断允许寄存器" class="headerlink" title="中断允许寄存器"></a>中断允许寄存器</h3></li></ol><p>​            Enable xx    1为开启 0为关闭</p><p>​            EA： 全局中断允许位</p><p>​            ETx: 定时器/计数器中断允许位</p><p>​            EXx: 外部中断允许位</p><p>​            ES:   串行口中断中断允许位</p><ol><li><h3 id="中断优先级寄存器"><a href="#中断优先级寄存器" class="headerlink" title="中断优先级寄存器"></a>中断优先级寄存器</h3></li></ol><p>​            Priority xx    1为高优先级中断   0为低优先级中断</p><p>​            命名规则同上</p><ol><li><h3 id="定时器-计时器工作方式寄存器-TMOD"><a href="#定时器-计时器工作方式寄存器-TMOD" class="headerlink" title="定时器/计时器工作方式寄存器 TMOD"></a>定时器/计时器工作方式寄存器 TMOD</h3></li></ol><ol><li><h3 id="定时器-计时器控制寄存器-TCON"><a href="#定时器-计时器控制寄存器-TCON" class="headerlink" title="定时器/计时器控制寄存器 TCON"></a>定时器/计时器控制寄存器 TCON</h3></li></ol><h2 id="中断服务程序的写法"><a href="#中断服务程序的写法" class="headerlink" title="中断服务程序的写法"></a>中断服务程序的写法</h2><ol><li><h3 id="配置程序"><a href="#配置程序" class="headerlink" title="配置程序"></a>配置程序</h3></li></ol><p>  中断程序的总执行时间要小于计时器周期，否则其他程序会出现异常，代码没错，却不会触发</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TMOD =<span class="number">0x01</span>; <span class="comment">//设置计时器的工作模式</span></span><br><span class="line">EA=<span class="number">1</span>;  <span class="comment">//开启全局中断开关</span></span><br><span class="line"></span><br><span class="line">TH0=(<span class="number">65535</span><span class="number">-45872</span>)/<span class="number">256</span>;  <span class="comment">//装载高八位和第八位</span></span><br><span class="line">TL0=(<span class="number">65535</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">ET0=<span class="number">1</span>; <span class="comment">//开启计时器0</span></span><br><span class="line">TR0=<span class="number">1</span>; <span class="comment">//运行计时器0</span></span><br></pre></td></tr></table></figure><ol><li><h3 id="中断程序"><a href="#中断程序" class="headerlink" title="中断程序"></a>中断程序</h3></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">T0_time</span><span class="params">()</span> interrupt 0</span><br><span class="line">&#123;</span><br><span class="line">TH0=(<span class="number">65535</span><span class="number">-45872</span>)/<span class="number">256</span>; </span><br><span class="line">    TL0=(<span class="number">65535</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">    <span class="comment">//其他的操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 中断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keil5 问题处理方案合集</title>
      <link href="/posts/6b7d0a1b.html"/>
      <url>/posts/6b7d0a1b.html</url>
      
        <content type="html"><![CDATA[<ol><li><h2 id="中文显示乱码"><a href="#中文显示乱码" class="headerlink" title="中文显示乱码"></a>中文显示乱码</h2><p>点击Edit - Configuration ，如图所示，点击ok即可</p><span id="more"></span><p><img src="ChineseError.png" style="zoom:80%;" /></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Keil </tag>
            
            <tag> Error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言代码规范（编程规范）</title>
      <link href="/posts/8400862f.html"/>
      <url>/posts/8400862f.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么叫规范？"><a href="#什么叫规范？" class="headerlink" title="什么叫规范？"></a>什么叫规范？</h2><p>​        在<a href="http://c.biancheng.net/c/">C语言</a>中不遵守编译器的规定，编译器在编译时就会报错，这个规定叫作规则。但是有一种规定，它是一种人为的、约定成俗的，即使不按照那种规定也不会出错，这种规定就叫作规范。</p><p>​        虽然我们不按照规范也不会出错，但是那样代码写得就会很乱。大家刚开始学习C语言的时候，第一步不是说要把程序写正确，而是要<span id="more"></span>写规范。因为如果你养成一种非常不好的写代码的习惯，代码就会写得乱七八糟，等到将来工作面试的时候，这样的习惯可能会让你失去机会。</p><h2 id="代码如何写才能规范"><a href="#代码如何写才能规范" class="headerlink" title="代码如何写才能规范"></a><strong>代码如何写才能规范</strong></h2><p>​        那么代码如何写才能写得很规范呢？代码的规范化不是说看完本节内容后就能实现的。它里面细节很多，而且需要不停地写代码练习，不停地领悟，慢慢地才能掌握的一种编程习惯。所以大家不要想着一下子就能把代码规范化的所有知识全部掌握，也不要想着一下子就能把代码写规范，这是不太可能的。</p><p>​        有很多知识，比如为什么代码要这样写，为什么不能那样写，作为一个初学者你是很难弄明白的。有很多规范是为了在程序代码量很大的时候，便于自己阅读，也便于别人阅读。</p><p>​        所以刚开始的时候有很多规范你不知道为什么要那样规定，你就单纯地模仿就行了。等将来敲代码敲得时间长了，你就会感觉到那样写是很有好处的。</p><h2 id="代码规范化的好处"><a href="#代码规范化的好处" class="headerlink" title="代码规范化的好处"></a><strong>代码规范化的好处</strong></h2><p>​        代码规范化的第一个好处就是看着很整齐、很舒服。假如你现在用不规范的方式写了一万行代码，现在能看得懂，但等过了三个月你再回头看时就很吃力了，更不要说给别人看了。所以代码要写规范，比如加注释就是代码规范化的一个思想。</p><p>​        在一般情况下，根据软件工程的思想，我们的注释要占整个文档的20%以上。所以注释要写得很详细，而且格式要写得很规范。</p><p>​        第二个好处是，把代码写规范则程序不容易出错。如果按照不规范的格式输入代码的话，很容易出错。而代码写规范的话即使出错了查错也会很方便。格式虽然不会影响程序的功能，但会影响可读性。程序的格式追求清晰、美观，是程序风格的重要构成元素。</p><h3 id="代码规范化的七大原则"><a href="#代码规范化的七大原则" class="headerlink" title="代码规范化的七大原则"></a><strong>代码规范化的七大原则</strong></h3><p>代码规范化基本上有七大原则，体现在空行、空格、成对书写、缩进、对齐、代码行、注释七方面的书写规范上。</p><ol><li><h4 id="空行"><a href="#空行" class="headerlink" title="空行"></a><strong>空行</strong></h4></li></ol><p>空行起着分隔程序段落的作用。空行得体将使程序的布局更加清晰。空行不会浪费内存，虽然打印含有空行的程序会多消耗一些纸张，但是值得。</p><p> 规则一：定义变量后要空行。尽可能在定义变量的同时初始化该变量，即遵循就近原则。如果变量的引用和定义相隔比较远，那么变量的初始化就很容易被忘记。若引用了未被初始化的变量，就会导致程序出错。</p><p> 规则二：每个函数定义结束之后都要加空行。</p><p> 总规则：两个相对独立的程序块、变量说明之后必须要加空行。比如上面几行代码完成的是一个功能，下面几行代码完成的是另一个功能，那么它们中间就要加空行。这样看起来更清晰。</p><ol><li><h4 id="空格"><a href="#空格" class="headerlink" title="空格"></a><strong>空格</strong></h4></li></ol><p>规则一：关键字之后要留空格。像 const、case 等关键字之后至少要留一个空格，否则无法辨析关键字。像 if、for、while 等关键字之后应留一个空格再跟左括号(，以突出关键字。</p><p> 规则二：函数名之后不要留空格，应紧跟左括号(，以与关键字区别。</p><p> 规则三：(向后紧跟；)、,、;这三个向前紧跟；紧跟处不留空格。</p><p> 规则四：,之后要留空格。如果;不是一行的结束符号，其后要留空格。</p><p> 规则五：赋值运算符、关系运算符、算术运算符、逻辑运算符、位运算符，如 =、==、！=、+=、－=、<em>=、/=、%=、&gt;&gt;=、&lt;&lt;=、&amp;=、^=、|=、&gt;、&lt;=、&gt;、&gt;=、+、－、</em>、/、%、&amp;、|、&amp;&amp;、||、&lt;&lt;、&gt;&gt;、^ 等双目运算符的前后应当加空格。</p><p> 注意，运算符“%”是求余运算符，与 printf 中 %d 的“%”不同，所以 %d 中的“%”前后不用加空格。</p><p> 规则六：单目运算符 !、~、++、－－、－、*、&amp; 等前后不加空格。</p><p> 注意：</p><p>·    这里的“－”和规则五里面的“－”不同。这里的“－”是负号运算符，规则五里面的“－”是减法运算符。</p><p>·    这里的“<em>”和规则五里面的“</em>”也不同。这里的“<em>”是指针运算符，规则五里面的“</em>”是乘法运算符。</p><p>·    这里的“&amp;”和规则五里面的“&amp;”也不同。这里的“&amp;”是取地址运算符，规则五里面的“&amp;”是按位与运算符。</p><p> 总之，规则六中的是单目运算符，而规则五中的是双目运算符，它们是不一样的。</p><p> 规则七：像数组符号[]、结构体成员运算符.、指向结构体成员运算符-&gt;，这类操作符前后不加空格。</p><p> 规则八：对于表达式比较长的 for 语句和 if 语句，为了紧凑起见，可以适当地去掉一些空格。但 for 和 if 后面紧跟的空格不可以删，其后面的语句可以根据语句的长度适当地去掉一些空格。例如：</p><p>for (i=0; i&lt;10; i++)</p><p>for 和分号后面保留空格就可以了，=和&lt;前后的空格可去掉。</p><ol><li><h4 id="成对书写"><a href="#成对书写" class="headerlink" title="成对书写"></a><strong>成对书写</strong></h4></li></ol><p>成对的符号一定要成对书写，如 ()、{}。不要写完左括号然后写内容最后再补右括号，这样很容易漏掉右括号，尤其是写嵌套程序的时候。</p><ol><li><h4 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a><strong>缩进</strong></h4></li></ol><p>缩进是通过键盘上的 Tab 键实现的，缩进可以使程序更有层次感。原则是：如果地位相等，则不需要缩进；如果属于某一个代码的内部代码就需要缩进。</p><ol><li><h4 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a><strong>对齐</strong></h4></li></ol><p>对齐主要是针对大括号{}说的：</p><p> 规则一：{和}分别都要独占一行。互为一对的{和}要位于同一列，并且与引用它们的语句左对齐。</p><p> 规则二：{}之内的代码要向内缩进一个 Tab，且同一地位的要左对齐，地位不同的继续缩进。</p><p> 还有需要注意的是，很多编程软件是会“自动对齐”的，比如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (…)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写完 if 那一行后，按回车，此时光标在括号的右边，而此 if 下的大括号要写在与 if 左对齐的正下方，通常我们是按一下 Backspace 键使光标停在与 if 左对齐的正下方。但事实上我们不需要这样做，我们直接输入大括号即可，系统会自动对齐到与 if 左对齐的正下方。再接着看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (…)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (…)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写完 while 那一行后，按回车，此时光标不是停在与 while 左对齐的正下方，同样，我们不需要按 Backspace，直接输入大括号即可，系统会自动对齐到与 while 左对齐的正下方的。</p><p> 此外编程软件还有“对齐、缩进修正”功能。就是按 Ctrl+A 全选，然后按 Alt+F8，这时程序中所有成对的大括号都会自动对齐，未缩进的也会自动缩进。不管是在编程过程中，还是在编写结束完之后，都可以使用这个技巧。但如果完全按照规范写，那根本就不需要这个技巧，所以，这只是一个辅助功能。</p><ol><li><h4 id="代码行"><a href="#代码行" class="headerlink" title="代码行"></a><strong>代码行</strong></h4></li></ol><p>规则一：一行代码只做一件事情，如只定义一个变量，或只写一条语句。这样的代码容易阅读，并且便于写注释。</p><p> 规则二：if、else、for、while、do 等语句自占一行，执行语句不得紧跟其后。此外，非常重要的一点是，不论执行语句有多少行，就算只有一行也要加{}，并且遵循对齐的原则，这样可以防止书写失误。</p><ol><li><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a><strong>注释</strong></h4></li></ol><p>C语言中一行注释一般采用//…，多行注释必须采用/<em>…</em>/。注释通常用于重要的代码行或段落提示。在一般情况下，源程序有效注释量必须在 20% 以上。虽然注释有助于理解代码，但注意不可过多地使用注释。</p><p> 规则一：注释是对代码的“提示”，而不是文档。程序中的注释不可喧宾夺主，注释太多会让人眼花缭乱。</p><p> 规则二：如果代码本来就是清楚的，则不必加注释。例如：</p><p>i++; //i加1</p><p>这个就是多余的注释。</p><p> 规则三：边写代码边注释，修改代码的同时要修改相应的注释，以保证注释与代码的一致性，不再有用的注释要删除。</p><p> 规则四：当代码比较长，特别是有多重嵌套的时候，应当在段落的结束处加注释，这样便于阅读。</p><p> 规则五：每一条宏定义的右边必须要有注释，说明其作用。</p><h2 id="实际案例"><a href="#实际案例" class="headerlink" title="实际案例"></a><strong>实际案例</strong></h2><p>下面我们给出一段求一元二次方程的代码，让大家实际感受一下。虽然这个程序不包含所有的规范，但一些包含的规范我们可以对照着看看。</p><p> 以下程序的功能是把任何一个一元二次方程 ax2+bx+c=0 的解给求出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span> <span class="comment">/*因为要用到求平方函数sqrt()，所以要包含头文件 math.h*/</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//把三个系数保存到计算机中</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>; <span class="comment">// “=”不表示相等，而是表示赋值</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> delta;  <span class="comment">//delta存放的是b*b - 4*a*c的值</span></span><br><span class="line"><span class="type">double</span> x1, x2; <span class="comment">//分别用于存放一元二次方程的两个解</span></span><br><span class="line"></span><br><span class="line">delta = b*b - <span class="number">4</span>*a*c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (delta &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x1 = (-b + <span class="built_in">sqrt</span>(delta)) / (<span class="number">2</span>*a);</span><br><span class="line"> x2 = (-b - <span class="built_in">sqrt</span>(delta)) / (<span class="number">2</span>*a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;该一元二次方程有两个解，x1 = %f, x2 = %f\n&quot;</span>, x1, x2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == delta)</span><br><span class="line">&#123;</span><br><span class="line">x1 = (-b) / (<span class="number">2</span>*a);</span><br><span class="line">x2 = x1; <span class="comment">//左边值赋给右边</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;该一元二次方程有一个唯一解，x1 = x2 = %f\n&quot;</span>, x1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无解\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br> 该一元二次方程有一个唯一解，x1 = x2 = -1.000000</p><p> 大家不用关心程序的逻辑和思路，只关注代码规范即可。</p><p><strong>小结</strong></p><p>单纯地读完一遍肯定没什么感觉，没关系，要想把代码写规范不是一朝一夕的事，这应该是一种习惯，需要不停地敲、不停的积累。刚开始的时候多模仿，照着规范写就行了，以后在写代码的时候，情不自禁地就会按规范的方式书写了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 代码规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单片机培训日志</title>
      <link href="/posts/d2b1955a.html"/>
      <url>/posts/d2b1955a.html</url>
      
        <content type="html"><![CDATA[<p>特地写下这篇文章，以便以后复习使用。<span id="more"></span></p><h2 id="开发板介绍"><a href="#开发板介绍" class="headerlink" title="开发板介绍"></a>开发板介绍</h2><p>国信长天单片机竞赛实训平台</p><ol><li><p>MCU： IAP15F2K61S2 </p></li><li><p>复位按键(S1</p><p>​    按下可复位竞赛平台  注：要在stc-isp中取消选择 复位脚作为IO</p></li><li><p>按键模式选择跳线（J5）</p><ul><li><p>KBD：矩阵按键模式  控制  S4~ S19 为矩阵按键模式</p></li><li><p>BTN：独立按键模式  控制  S4 ~  S7 为独立按键模式</p></li></ul></li><li><p>下载模块</p><p>​    U3及其外围器件，是平台的下载功能模块。</p><p>​    L9是电源指示灯，接通电源常亮</p><p>​    L11 、L12是串口灯，下载或串口时闪烁</p></li><li><p>编程方式选择跳线（J13）</p><ul><li><p>IO编程方式</p></li><li><p>MM编程方式，即存储器映射扩展模式，其英文全称为：Memory Mapped Extended Modd</p></li></ul></li><li><p>对比度调节电位器 </p><p>​    Rb1是竞赛平台的LCD1602、LCD12864液晶显示器的对比度调节电位器</p></li><li><p>LCD1602   接口  (Rb1右方短的那个接口)</p></li><li><p>LCD12864 接口  (Rb1右方长的那个接口)</p></li><li><p>超声波测距模块（JS1, JS2）</p></li><li><p>超声红外选择跳线（J2）</p><ul><li><p>4-2 3-1：超声波测距模块</p></li><li><p>4-6 3-5：红外收发模块</p></li></ul></li><li><p>8*8点阵模块接口（U22、U23）</p></li><li><p>红外收发模块（LD1、U20）</p></li><li><p>霍尔元件接口（U21）</p></li><li><p>74HC138编码器（U24）</p></li><li><p>温度传感器（U5）</p><p>​    DS18B20的温度传感器，可测量当前环境温度</p></li><li><p>数码管（DS1、DS2）及锁存器（U7、U8）</p></li><li><p>138 译码器（U9）</p><p>   注：Yx  x的二进制就是P27 P26 P25 (高三位)</p><p>| 代号 | 功能 |<br>| —————— | ———————|<br>| 74HC138 - Y0 | 未用           |<br>| 74HC138 - Y1 | 未用           |<br>| 74HC138 - Y2 | 未用           |<br>| 74HC138 - Y3 | 未用           |<br>| 74HC138 - Y4    0x80 | 8*LED 锁存     |<br>| 74HC138 - Y5    0xA0 | ULN2003 锁存   |<br>| 74HC138 - Y6    0xC0 | 数码管位选锁存 |<br>| 74HC138 - Y7    0xE0 | 数码管段选锁存 |</p></li></ol><ol><li><p>驱动模块（U10）</p><p>​    ULN2003驱动模块</p></li><li><p>8*LED（L1~L8）及其锁存器（U6）</p></li><li><p>蜂鸣器（SP1）</p><p>​    蜂鸣器可提供提醒、报警等功能</p></li><li><p>继电器（K1）</p></li><li><p>输入输出接口（J3）</p></li><li><p>外接电源接口（J12）</p><p>​    可为竞赛平台之外的设备供电（该接口的供电能力较弱）</p></li><li><p>信号放大模块（U26及其周围器件）</p><p>​    J7放大模块外部接口</p></li><li><p>ADC转换芯片（U16）</p><p>​    竞赛平台的ADC转换芯片PCF8591</p></li><li><p>光敏器件（RD1）</p><p>​    改变光敏器件的光照条件，器件电阻值发生变化</p></li><li><p>模拟电压输入电位器（Rb2）</p><p>​    调整电位器，ADC芯片可得到变化的模拟电压</p></li><li><p>信号放大调节电位器（Rb4）</p></li><li><p>方波发生器电位器（Rb3）</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2></li></ol><ul><li><h3 id="延迟函数"><a href="#延迟函数" class="headerlink" title="延迟函数"></a>延迟函数</h3><p>这个可以用 STC-ISP 生成</p><p>代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j, k;</span><br><span class="line">_nop_();<span class="comment">// 包含于intrins.h中</span></span><br><span class="line">_nop_();<span class="comment">// 空操作 （相当于8051 NOP 指令） 函数延时一个机器周期的时间。</span></span><br><span class="line">i = <span class="number">9</span>;</span><br><span class="line">j = <span class="number">104</span>;</span><br><span class="line">k = <span class="number">139</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--k);</span><br><span class="line">&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><h2 id="正式内容"><a href="#正式内容" class="headerlink" title="正式内容"></a>正式内容</h2></li><li><h3 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h3><p>操作8*LED模块</p><p>1、IO扩展模式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit LCD_E = P1^<span class="number">7</span>;</span><br><span class="line">sbit RELAY = P0^<span class="number">4</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_E = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2 = ((P2&amp;<span class="number">0x1f</span>)|<span class="number">0x80</span>);<span class="comment">// 选通 8*LED 指示灯模块锁存器。 0x1f:00011111  0x80:10000000</span></span><br><span class="line">P0 = <span class="number">0xff</span>;            <span class="comment">// P25=0 P26=0 P27=1</span></span><br><span class="line">P2 &amp;= <span class="number">0x1f</span>;           <span class="comment">// 8*LED 指示灯模块锁存器锁存。74HC138 译码器选择 Y0 输出。</span></span><br><span class="line">delay();              <span class="comment">//这个鬼东西，哪里去了？？？</span></span><br><span class="line">P2 = ((P2&amp;<span class="number">0x1f</span>)|<span class="number">0x80</span>);</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line">P2 &amp;= <span class="number">0x1f</span>;</span><br><span class="line">delay();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、MM扩展模式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;absacc.h&quot;</span></span></span><br><span class="line">sbit LCD_E = P1^<span class="number">7</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_E = <span class="number">0</span>; <span class="comment">//将 LCD 模块禁能，防止 LCD 模块对总线状态的影响</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;                         <span class="comment">// LED 指示灯模块的地址为 0x8000</span></span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0x00</span>; <span class="comment">// LED 指示灯全部点亮</span></span><br><span class="line">        delay();</span><br><span class="line">        </span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xff</span>; <span class="comment">// LED 指示灯全部熄灭</span></span><br><span class="line">        delay();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><h3 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h3><ol><li><h4 id="独立按键"><a href="#独立按键" class="headerlink" title="独立按键"></a>独立按键</h4><p>这个没啥说的，就一个防抖操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sbit key = P30;</span><br><span class="line"><span class="keyword">if</span>(key==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    delayms(<span class="number">20</span>);<span class="comment">// 防抖核心代码</span></span><br><span class="line">    <span class="keyword">if</span>(key==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 自定义代码区域</span></span><br><span class="line">        <span class="keyword">while</span>(!key);<span class="comment">// 防止按键跑飞，暂停程序，等待松开按键</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul><ol><li><h4 id="矩阵按键"><a href="#矩阵按键" class="headerlink" title="矩阵按键"></a>矩阵按键</h4><p>​    我真的是头疼啊，重复，代码长，易出错……</p><p>​    按键的检测原理是这样的：</p><p>​            首先，先把非共极端的电压拉高，之后拉低共极端，如果按键按下，那么在非共极端就会检测到异常（值为0），此时就可以查找出哪个键被按下了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stc15f2k60s2.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">code <span class="type">unsigned</span> <span class="type">char</span> tab[] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> temp;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; <span class="number">500</span>; a++)</span><br><span class="line"><span class="keyword">for</span> (b = <span class="number">0</span>; b &lt; m; b++)</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Key_Scan</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判断S4 ~ S7</span></span><br><span class="line">P3 = <span class="number">0xFF</span>;P44 = <span class="number">0</span>;P42 = <span class="number">1</span>; <span class="comment">// 配置要检测的按键</span></span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">1</span>); <span class="comment">// 科学防抖</span></span><br><span class="line">P3 = <span class="number">0xFF</span>;</span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0E</span>:num = <span class="number">7</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0D</span>:num = <span class="number">6</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0B</span>:num = <span class="number">5</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x07</span>:num = <span class="number">4</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//判断S8 ~ S11</span></span><br><span class="line">P3 = <span class="number">0xFF</span>;P44 = <span class="number">1</span>;P42 = <span class="number">0</span>; <span class="comment">// 配置要检测的按键</span></span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">1</span>); <span class="comment">// 科学防抖</span></span><br><span class="line">P3 = <span class="number">0xFF</span>;</span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0E</span>:num = <span class="number">11</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0D</span>:num = <span class="number">10</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0B</span>:num =  <span class="number">9</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x07</span>:num =  <span class="number">8</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//判断S12 ~ S15</span></span><br><span class="line">P3 = <span class="number">0xDF</span>;P44 = <span class="number">1</span>;P42 = <span class="number">1</span>; <span class="comment">// 配置要检测的按键</span></span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">1</span>); <span class="comment">// 科学防抖</span></span><br><span class="line">P3 = <span class="number">0xDF</span>;</span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0E</span>:num = <span class="number">15</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0D</span>:num = <span class="number">14</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0B</span>:num = <span class="number">13</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x07</span>:num = <span class="number">12</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//判断S16 ~ S19</span></span><br><span class="line">P3 = <span class="number">0xEF</span>;P44 = <span class="number">1</span>;P42 = <span class="number">1</span>; <span class="comment">// 配置要检测的按键</span></span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">1</span>); <span class="comment">// 科学防抖</span></span><br><span class="line">P3 = <span class="number">0xEF</span>;</span><br><span class="line">temp = P3 &amp; <span class="number">0x0F</span>;</span><br><span class="line"><span class="keyword">if</span> (temp != <span class="number">0x0F</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0E</span>:num = <span class="number">19</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0d</span>:num = <span class="number">18</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0B</span>:num = <span class="number">17</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x07</span>:num = <span class="number">16</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> ge, shi, bai;</span><br><span class="line">bai = x / <span class="number">100</span>;</span><br><span class="line">shi = (x / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">ge = x % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">P2 = <span class="number">0xC0</span>;</span><br><span class="line">P0 = <span class="number">0x80</span>;</span><br><span class="line">P2 = <span class="number">0xE0</span>;</span><br><span class="line">P0 = tab[ge];</span><br><span class="line">delayms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">P2 = <span class="number">0xC0</span>;</span><br><span class="line">P0 = <span class="number">0x40</span>;</span><br><span class="line">P2 = <span class="number">0xE0</span>;</span><br><span class="line">P0 = tab[shi];</span><br><span class="line">delayms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">P2 = <span class="number">0xC0</span>;</span><br><span class="line">P0 = <span class="number">0x20</span>;</span><br><span class="line">P2 = <span class="number">0xE0</span>;</span><br><span class="line">P0 = tab[bai];</span><br><span class="line">delayms(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">P2 = <span class="number">0x80</span>;</span><br><span class="line">P0 = <span class="number">0xFF</span>;</span><br><span class="line">P2 = <span class="number">0xA0</span>;</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">display(num);</span><br><span class="line">Key_Scan();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li><h3 id="数码管"><a href="#数码管" class="headerlink" title="数码管"></a>数码管</h3><p>数码管动态扫描显示</p></li></ul><pre><code>数码管的刷新周期要小于24ms，否则就会出现闪动的情况，特别指出，在24ms下，数码管已经出现暗淡，轻微闪烁的情况，由于现在科学界对于人体眼球的刷新频率还没有一个确切的定论，现在只能确定一个范围</code></pre><p>  1、MM扩展模式</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="type">void</span> <span class="title function_">display</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">  XBYTE[<span class="number">0xE000</span>] = <span class="number">0xff</span>;<span class="comment">//数码管消隐</span></span><br><span class="line">  XBYTE[<span class="number">0xC000</span>] = <span class="number">0xff</span>;<span class="comment">//数码管位选</span></span><br><span class="line">  XBYTE[<span class="number">0xE000</span>] = tab[dspbuf[dspcom]];<span class="comment">//数码管段码输入</span></span><br><span class="line">      <span class="comment">//数码管段码端的操作地址为 0xE000，数码管位选端口的操作地址为 0xC000 </span></span><br><span class="line">  <span class="keyword">if</span>（++dspcom == <span class="number">8</span>）&#123;</span><br><span class="line">  dspcom = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  2、IO扩展模式</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="type">void</span> <span class="title function_">display</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">  P2 = ((P2&amp;<span class="number">0x1f</span>)|<span class="number">0xe0</span>); <span class="comment">//数码管消隐  e0:11100000</span></span><br><span class="line">  P0 = <span class="number">0xff</span>;</span><br><span class="line">  P2 &amp;= <span class="number">0x1f</span>;</span><br><span class="line">  </span><br><span class="line">  P2 = ((P2&amp;<span class="number">0x1f</span>)|<span class="number">0xc0</span>); <span class="comment">//位选控制    c0:11000000</span></span><br><span class="line">  P0 = <span class="number">1</span>&lt;&lt;dspcom;</span><br><span class="line">  P2 &amp;= <span class="number">0x1f</span>;</span><br><span class="line">  </span><br><span class="line">  P2 = ((P2&amp;<span class="number">0x1f</span>)|<span class="number">0xe0</span>); <span class="comment">//段码输入    e0:11100000</span></span><br><span class="line">  P0 = tab[dspbuff[dspcom]];</span><br><span class="line">  P2 &amp;= <span class="number">0x1f</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>（++dspcom == <span class="number">8</span>）&#123;</span><br><span class="line">  dspcom = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这个数码管告诉我，睡觉有多么的重要</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stc15f2k60s2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;intrins.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">code <span class="type">unsigned</span> <span class="type">char</span> tab[] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> a, b;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; <span class="number">500</span>; a++)</span><br><span class="line">    <span class="keyword">for</span> (b = <span class="number">0</span>; b &lt; m; b++)</span><br><span class="line">      ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> x = <span class="number">1</span>;  <span class="comment">// 我也不知道为什么要写到这里来，什么鬼？？</span></span><br><span class="line"><span class="type">char</span> i;      <span class="comment">// 同上</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">P2 = <span class="number">0xA0</span>;</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line">P2 = <span class="number">0x80</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">x=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xC0</span>;</span><br><span class="line">P0= x;  <span class="comment">// 位选</span></span><br><span class="line">x=x*<span class="number">2</span>;  <span class="comment">// 或者 x&lt;&lt;i</span></span><br><span class="line">P2=<span class="number">0xE0</span>;</span><br><span class="line">P0= tab[i]; <span class="comment">//段选</span></span><br><span class="line">delayms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="蜂鸣器"><a href="#蜂鸣器" class="headerlink" title="蜂鸣器"></a>蜂鸣器</h3><p>其实就这两行代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P2 = <span class="number">0xA0</span>;</span><br><span class="line">P0 = 代码编号; <span class="comment">//这里也可以用0x00 与0xFF ，但是我感觉不怎么好</span></span><br></pre></td></tr></table></figure><p>| 代码编号 | 功能                            |<br>| ———— | ———————————————- |<br>| 0x10     | 点亮L10 ， 打开继电器           |<br>| 0x40     | 蜂鸣器响                        |<br>| 0x50     | 蜂鸣器响，点亮L10 ， 打开继电器 |</p></li></ul><ul><li><h3 id="光敏器件"><a href="#光敏器件" class="headerlink" title="光敏器件"></a>光敏器件</h3></li><li><h3 id="霍尔元件"><a href="#霍尔元件" class="headerlink" title="霍尔元件"></a>霍尔元件</h3></li><li><h3 id="超声波测距模块"><a href="#超声波测距模块" class="headerlink" title="超声波测距模块"></a>超声波测距模块</h3></li><li><h3 id="红外收发模块"><a href="#红外收发模块" class="headerlink" title="红外收发模块"></a>红外收发模块</h3></li><li><h3 id="温度传感器"><a href="#温度传感器" class="headerlink" title="温度传感器"></a>温度传感器</h3><p>温度传感器有且仅有一个引脚与其相连，引脚为P14</p></li></ul><ul><li><p>3</p></li><li><p>3</p></li><li><p>3</p></li><li><p>3</p></li><li><p>3</p></li><li><p>3</p></li><li><p>3</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual Studio 修炼手册</title>
      <link href="/posts/e27e8aa0.html"/>
      <url>/posts/e27e8aa0.html</url>
      
        <content type="html"><![CDATA[<h2 id="Visual-Studio-简介"><a href="#Visual-Studio-简介" class="headerlink" title="Visual Studio 简介"></a>Visual Studio 简介</h2><p>​           <a href="http://visualstudio.microsoft.com/zh-hans/vs/">Visual Studio</a>是最流行的Windows平台应用程序的集成开发环境。不得不说，不安装VS，不能称为程序员（手动滑稽），系统内置了大量的编译环境，如C\C++ 、CSharp、.NET…… 还有我很多至今仍然没有使用过的神奇语言，现在VS2019 已支持自定义安装，嘿嘿，我只安装C\C++<br><span id="more"></span></p><h2 id="安装​"><a href="#安装​" class="headerlink" title="安装​"></a>安装​</h2><p>在<a href="https://visualstudio.microsoft.com/zh-hans/">官网</a>下载安装包, 我下载的是Professional版本。<br>注意：安装包是一个visual studio installer的在线安装包，首先安装的是 visual studio installer，之后通过<code>visual studio installer</code>安装<code>visual studio</code><br>一条龙式服务，真爽啥</p><p><img src="/posts/e27e8aa0/vs_1.png" alt="安装初始界面"></p><p>简洁安装 C\C++</p><p>在安装完<code>visual studio</code>以后，进入如下界面，我们仅选择<code>使用C++的桌面开发</code>，点击右下角的<code>下载时安装</code>，等待安装完成即可。<br><img src="/posts/e27e8aa0/vs_2.png" alt="安装选项"></p><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><h3 id="VAssistX"><a href="#VAssistX" class="headerlink" title="VAssistX"></a>VAssistX</h3><p>Visual Assist X是一款非常好的Microsoft Visual Studio插件，它可以完全集成到您的Microsoft开发环境中，升级了您的IDE，在不改变编程习惯的同时就可以感受到Visual Assist X为您带来的好处。软件支持C/C++，C#，ASP，VisualBasic，Java和HTML等语言，能自动识别各种关键字、系统函数、成员变量、自动给出输入提示、自动更正大小写错误、自动标示错误等。使用Visual Assist X有助于提高开发过程的自动化和开发效率。</p><p>其实现在已经有其他的代替方案，但是对于一个老玩家，情怀还是要有的。</p><h3 id="CodeMaid"><a href="#CodeMaid" class="headerlink" title="CodeMaid"></a>CodeMaid</h3><p>CodeMaid是一个开源的Visual Studio的扩展插件，用于整理与优化代码等。功能类似于商业软件ReSharper，但它是免费的，并且开放源代码。它能帮助你更容易的理解你的代码，支持多种编程语言。</p><p>功能：<br>代码清洁<br>代码挖掘<br>重新布局。可以按Microsoft’s StyleCop，也可自定义。<br>格式化<br>连接行。<br>在解决方案资源管理器窗口递归地折叠节点或整个目录树<br>查看Visual Studio 编译的进度。<br>增强查找，切换Cpp到头文件，XAML到后端代码。</p><h3 id="Indent-Guides"><a href="#Indent-Guides" class="headerlink" title="Indent Guides"></a>Indent Guides</h3><p>这款插件是给代码块增长对齐线，以标识匹配的花括号，让使用者很轻易的找到对应的语句块。</p><p>自从安装了这款插件，妈妈再也不用担心我看代码看跑偏了</p><h3 id="Color-Themes-for-Visual-Studio"><a href="#Color-Themes-for-Visual-Studio" class="headerlink" title="Color Themes for Visual Studio"></a>Color Themes for Visual Studio</h3><p>此插件是一个主题补充包。如果想修改主题  工具—&gt;选项  如图所示<img src="/posts/e27e8aa0/vs_3.png" alt="修改主题"></p><h3 id="Viasfora"><a href="#Viasfora" class="headerlink" title="Viasfora"></a>Viasfora</h3><p>Viasfora是Visual Studio 免费扩展，可通过使用颜色和其他功能来改善文本编辑体验。要想代码花里胡哨，必装</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>VS毕竟是一个集成开发环境，主要应用于工程，如果仅是学习语言什么的，建议安装VSCode，不接受反驳，VSCode在代码编辑器中天下第一</p>]]></content>
      
      
      
        <tags>
            
            <tag> Visual Studio </tag>
            
            <tag> Extension </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《平凡的世界》经典语句摘抄</title>
      <link href="/posts/de19e588.html"/>
      <url>/posts/de19e588.html</url>
      
        <content type="html"><![CDATA[<p>1.什么是人生？人生就是永不休止的奋斗！只有选定了目标并在奋斗中感到自己的努力没有虚掷，这样的生活才是充实的，精神也会永远年轻。<br><span id="more"></span><br>2.生活啊，生活！你有多少苦难，又有多少甘甜！天空不会永远阴暗，当乌云退尽的时候，蓝天上灿烂的阳光就会照亮大地。青草照样会鲜绿无比，花朵仍然会蓬勃开放。</p><p>3.即使有一天我要远走他乡，但愿我还能在梦中再回到这里来…</p><p>4.年轻是一个中性词，它代表着很多缺点：缺乏经验、少不更事、容易冲动。但是也有很多优点，其中之一就是有大把的时间去遗忘那些不该记住的事情。</p><p>5.这世上很多东西就是这样，他其实是同一种东西，但有的呢 他就像石墨，软的你可以把它捏成一团，有的坚硬的就像钻石，经过千锤百炼，散发着耀眼的光芒，更多的，平凡的就像这煤块了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于自信那点事</title>
      <link href="/posts/8a35f90.html"/>
      <url>/posts/8a35f90.html</url>
      
        <content type="html"><![CDATA[<p>自信五要素 :<span id="more"></span><br>1.自律<br>2.成就<br>3.健康<br>4.学识<br>5.认识自己</p><p>修炼方法 ：</p><ol><li>多做自己擅长的事</li><li>不要抱怨，学会接受不完美的自己</li><li>走路时，挺直腰板，目视前方</li><li>去做一件简单，并且你能坚持的事情</li><li>利用自己的主观能动性—对自信的渴望</li><li>少说多做</li></ol><p>注：以上内容来自 <a href="https://space.bilibili.com/14264313/dynamic">潘子Jane</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记 Python UnicodeDecodeError 修复</title>
      <link href="/posts/4709c83f.html"/>
      <url>/posts/4709c83f.html</url>
      
        <content type="html"><![CDATA[<p>今天打开终端输入python ，回车，突然出现如下情况<span id="more"></span></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python 3.7.3 (default, Mar 27 2019, 17:13:21) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;D:\Anaconda3\lib\site.py&quot;</span>, line 439, <span class="keyword">in</span> register_readline</span><br><span class="line">    readline.read_history_file(<span class="built_in">history</span>)</span><br><span class="line">  File <span class="string">&quot;D:\Anaconda3\lib\site-packages\pyreadline\rlmain.py&quot;</span>, line 165, <span class="keyword">in</span> read_history_file</span><br><span class="line">  File <span class="string">&quot;D:\Anaconda3\lib\site-packages\pyreadline\lineeditor\history.py&quot;</span>, line 82, <span class="keyword">in</span> read_history_file</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> open(filename, <span class="string">&#x27;r&#x27;</span>):</span><br><span class="line">UnicodeDecodeError: <span class="string">&#x27;gbk&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xa4 in position 117: illegal multibyte sequence</span></span><br></pre></td></tr></table></figure><p>看日志应该是 <strong>history.py</strong> 中的文件出现了问题，马上修复。</p><p>找到  open(filename, ‘r’)   改为  open(filename,’r’, <em>encoding</em>=’UTF-8’)  </p><p>Game Over.  :v: :smile:</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DPlayer 调用测试</title>
      <link href="/posts/5fb02ac6.html"/>
      <url>/posts/5fb02ac6.html</url>
      
        <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>​        DPlayer is a lovely HTML5 danmaku video player to help people build video and danmaku easily.</p><span id="more"></span><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><p>​        为了保证网页的加载速度，我直接采用CDN，最大程度避免了自加载网络拥堵的问题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dplayer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> dp = <span class="keyword">new</span> <span class="title class_">DPlayer</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;dplayer&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">autoplay</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">logo</span>: <span class="string">&#x27;/images/avatar.png&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">volume</span>: <span class="number">0.7</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">video</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">&#x27;/videos/demo.mp4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">pic</span>: <span class="string">&#x27;/images/1024x768-36.jpg&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css"><div id="dplayer"></div><script src="//cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script><script >const dp = new DPlayer({    container: document.getElementById('dplayer'),    autoplay: false,    logo: '/images/avatar.png',    volume: 0.7,    video: {        url: '/videos/demo.mp4',        pic: '/images/1024x768-36.jpg',    },});</script>]]></content>
      
      
      
        <tags>
            
            <tag> DPlayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><span id="more"></span><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
